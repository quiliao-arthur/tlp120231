1) Uma empresa que promove competições de MMA precisa de um sistema para gerenciar as atletas e organizar as competições. Para essa primeira versão do sistema, considere apenas o cadastro de profissionais da categoria peso-pena feminino. Considere que para cadastrar cada atleta é preciso saber: idade, peso, altura, nome da atleta e nome da equipe. Para esse sistema, considere, também, que as duas profissionais de cada luta serão definidas de acordo com a ordem de cadastro no sistema. Por exemplo, considere as atletas: Amanda Nunes, Felícia Spencer, Megan Anderson, Norma Dumont e Cristiane Justino foram cadastradas no sistema. Sendo assim, as duplas serão: Amanda Nunes vs Felícia Spencer; Megan Anderson vs Norma Dumont e Cristiane Justino aguradará uma atleta ser cadastrada para que ela possa competir. Diante deste contexto, implemente as funcionalidades abaixo:
  Crie um menu para que o usuário possa selecionar a execução de cada uma das opções abaixo e permita que ele utilize o código enquanto desejar.
a) Cadastro de atletas: faça uma funcionalidade que permita o cadastro das atletas;
b) Atualização de status: existem situações (como uma lesão) que a atleta precisa se afastar, temporariamente, das lutas. Em casos como este,ela precisará de um tempo maior para a próxima competição. Sendo assim, solicite que o usuário informe o nome da atleta que será afastada e verifique a posição dela na lista. Se o cadastro dela estiver na última posição, a remova da lista. Casso contrário, a remova da posição atual e a adicione no final da mesma lista. Por exemplo, considere o conjunto de atletas: Amanda Nunes, Felícia Spencer, Megan Anderson, Norma Dumont e Cristiane Justino. Considere, também, que Megan Anderson sofreu uma lesão. Segundo essa funcionalidadem ela será alterada para o final da lista, que ficará com a sequência: Amanda Nunes, Felícia Spencer, Norma DUmont, Cristiane Justino e Megan Anderson.
c) Exibição de oponentes: faça uma funcionalidade que solicite o número de duplas e apresente todos os dados das duplas que competirão. Por exemplo, se a lista de atletas for: Amanda Nunes, Felícia Spencer, Megan Anderson, Norma Dumont e Cristiane Justino e o usuário informar que deseja 2 duplas para as lutas, seu programa deverá exibir os dados de Amanda Nunes vs Felícia Spencer e Megan Anderson vs Norma Dumont. Considere que o usuário informará o número de duplas inferior ou igual ao número de pares de atletas presentes na lista, ou seja, ele não informará uma quantidade de duplas que não poderá ser exibida de acordo com o cadastro existente.
d) Premiação: Com base nesse cadastro, foi possível exibir a lista de oponentes. Sendo assim, com base na lista de atletas composta por Amanda Nunes, Felícia Spencer, Megan Anderson, Norma Dumont e Cristiane Justino, sabemos que Amanda Nunes competirá com Felícia Spencer; Megan Anderson competirá com Norma Dumont e Cristiane Justino aguardará uma atleta para competir. Para facilitar a explicação desse exercício, chamaremos de "nome da primeira atleta da dupla" o nome da primeira competidora (da esquerda para a direita) de cada luta. Por exemplo, para a dupla: Amanda Nunes e Felícia Spencer, o nome da primeira atleta da dupla é Amanda Nunes.
  Adicione à classe que representa a atleta, atributos para armazenar: (1) total de vitórias; (2) total de derrotas; (3) total de empates; (4) valor total recebido em prêmios. Os totais de vitórias, derrotas e empate são atualizados a cada competição realizada e serão usados para monstar um ranking, realizado no final de uma temporada de lutas.
  Após a realização de cada competição, o usuário deverá fornecer informações ao sistema que permitam a atualização do atributo que corresponde ao resultado de cada atleta nessa competição e o valor total recebido em prêmios. Para implementar essa funcionalidade, soolicite que o usuário informe o nome da primeira atleta da dupla cuja competição terminou. Em seguida, pergunte o valor do prêmio que a vencedofra da competição ganhará, e por fim, pergunte se a primeira atleta ganhou, perdeu ou empatou. Se ela ganhou, atualize os atributos total de vitórias (com incremento de uma vitória) e valor total recebido em prêmios (com incremento do valor da premiação da competição que ela acabou de vencer) do objeto dessa atleta. Adicionalmente, atualize o atributo total de derrotas do objeto da atleta presente na próxima posição da lista, ou seja, da segunda atleta dessa competição. De forma contrária, se a primeira atleta perdeu, apenas o atributo total de derrotas do objeto dessa atleta deve ser incrementado, enquanto no objeto da segunda atleta devem ser atualizados os atributos total de vitórias e de valor total recebido em prêmios. Por fim, em caso de empate o atributo de total de empate dos objetos das duas atletas devem ser incrementados.
e) Exibição do ranking: solicite que o usuário informe quantos pontos vale uma vitória e um empate (a derrota sempre vale 0). Em seguida, apresente o nome da atleta com a maior pontuação total. Crie um método para realizar essa tarefa.
f) Atleta sem competição: quando o usuário solicitar a execução desta funcionalidade, apresente o nome de todas as atletas que não competiram. Sabemos que uma atleta nunca competiu quando ela não possui nenhuma vitória, derrota ou empate.